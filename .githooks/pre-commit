#!/usr/bin/env bash
set -euo pipefail

echo "🔍 Checking for sensitive files and information..."

# Block mobile provisioning profiles or certs from being committed
if git diff --cached --name-only | grep -E -q '\\.(p12|mobileprovision)$'; then
  echo "🚫 You're trying to commit a signing file (.p12/.mobileprovision). Blocked."
  exit 1
fi

# Normalize code-signing values and bundle identifiers in the Xcode project
# before commit to avoid leaking local provisioning details into the repo.

repo_root="$(git rev-parse --show-toplevel)"
cd "$repo_root"

pbxproj_path="macflare.xcodeproj/project.pbxproj"

# Only run if the project file is staged in this commit
if ! git diff --cached --name-only | grep -qx "$pbxproj_path"; then
  exit 0
fi

if [ ! -f "$pbxproj_path" ]; then
  exit 0
fi

# Choose sed in-place flags that work cross-platform (BSD/macOS vs GNU/Linux)
if sed --version >/dev/null 2>&1; then
  # GNU sed
  SED_INPLACE=(-i -E)
else
  # BSD sed (macOS)
  SED_INPLACE=(-i '' -E)
fi

echo "🧹 Cleaning sensitive information from project.pbxproj..."

# Scrub sensitive or machine-specific code signing fields and normalize bundle identifiers
sed "${SED_INPLACE[@]}" \
  -e 's/(DEVELOPMENT_TEAM = )[^;]*;/\1"";/g' \
  -e 's/(PROVISIONING_PROFILE_SPECIFIER = )[^;]*;/\1"";/g' \
  -e 's/(PROVISIONING_PROFILE = )[^;]*;/\1"";/g' \
  -e 's/(CODE_SIGN_IDENTITY = )[^;]*;/\1"";/g' \
  -e 's/PRODUCT_BUNDLE_IDENTIFIER = [^;]*\\.macflare[^;]*;/PRODUCT_BUNDLE_IDENTIFIER = "com.example.macflare";/g' \
  -e 's/PRODUCT_BUNDLE_IDENTIFIER = [^;]*\\.macflareTests[^;]*;/PRODUCT_BUNDLE_IDENTIFIER = "com.example.macflareTests";/g' \
  -e 's/PRODUCT_BUNDLE_IDENTIFIER = [^;]*\\.macflareUITests[^;]*;/PRODUCT_BUNDLE_IDENTIFIER = "com.example.macflareUITests";/g' \
  "$pbxproj_path"

# Re-stage the file if modified
if ! git diff --quiet -- "$pbxproj_path"; then
  git add "$pbxproj_path"
  echo "✅ Project file cleaned successfully"
fi

exit 0


